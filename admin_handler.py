from telethon import events
from telethon.tl.types import ChannelParticipantAdmin, ChannelParticipantCreator
from telethon.errors import ChatAdminRequiredError
import asyncio
from config import config
import datetime
import os


"""
telethon documentation
https://docs.telethon.dev/en/stable/basic/updates.html
"""


class GroupWipeHandlerMessages:
    """
    –≠—Ç–æ—Ç –∫–ª–∞—Å—Å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç –∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
    –Ø–≤–ª—è–µ—Ç—Å—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–º –∫–ª–∞—Å—Å–æ–º –¥–ª—è <GroupWipeHandler>
    –ù–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∏–∫–∞–∫–æ–π –ª–æ–≥–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–æ–¥—É–ª—è <telethon>, —Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º
    """

    cmd_total_wipe = '/wipe_total'
    cmd_personal_wipe = '/wipe_myself'
    cmd_help = '/help'
    msg_run_global_wipe = "–ó–∞–ø—É—Å–∫–∞—é –≥–ª–æ–±–∞–ª—å–Ω—ã–π –≤–∞–π–ø —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–∞–Ω–Ω–æ–º –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ..."
    msg_run_personal_wipe = "–ó–∞–ø—É—Å–∫–∞—é –≤–∞–π–ø –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    msg_permission_denied = "‚ùóÔ∏è –ù–µ–æ–±—Ö–æ–¥–∏–º—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ç–æ—Ä–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –ø—Ä–æ—Ü–µ–¥—É—Ä—ã"
    msg_help = "–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –í–°–ï–• —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —á–∞—Ç:\n" + \
               f"<code>{cmd_total_wipe}</code>\n" \
               f"<i>- –∑–∞–ø—Ä–æ—Å–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ—á–∏—Å—Ç–∫—É " + \
               "(—Ç—Ä–µ–±—É–µ—Ç—Å—è 3 –∑–∞–ø—Ä–æ—Å(–∞) –æ—Ç —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫)</i>\n\n" + \
               "–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–≤–æ–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —á–∞—Ç:\n" + \
               f"<code>{cmd_personal_wipe}</code>\n" \
               f"<i>- –æ—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–∞–ª–µ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å " \
               f"–∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –≤–æ –∏–∑–±–µ–∂–∞–Ω–∏—è –ª–æ–∂–Ω–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è)</i>\n\n" + \
               "üîÑ –ß–µ—Ä–µ–∑ 24 —á–∞—Å–∞ –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã —Å–±—Ä–∞—Å—ã–≤–∞—é—Ç—Å—è.\n\n" + \
               "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —á–∞—Ç:\n"  + \
               f"<code>{cmd_help}</code>"

    msg_about_bot = '<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!</b>\n' \
                    '–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ,—á—Ç–æ –±—ã —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π ' \
                    '–≤–Ω—É—Ç—Ä–∏ —ç—Ç–æ–≥–æ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n' + \
                    '–¢–∞–∫ –∂–µ –∏–º–µ–µ—Ç—Å—è –æ–ø—Ü–∏—è —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è (–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) –≤ –≥—Ä—É–ø–ø–µ.\n\n' + \
                    '‚ùï –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–¥–∞—Ç—å –±–æ—Ç—É –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n\n' \
                    '‚ùï –¢–∞–∫ –∂–µ –µ—Å–ª–∏ –≥—Ä—É–ø–ø–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª–µ–µ 100 —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫—Ä—ã—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π.\n' \
                    '–î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–π—Ç–∏ –≤ –ø—É–Ω–∫—Ç –º–µ–Ω—é ‚öôÔ∏è <i>"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–æ–π"</i>.\n' + \
                    '–î–∞–ª–µ–µ –Ω–∞–π—Ç–∏ –æ–ø—Ü–∏—é ‚öôÔ∏è <i>"–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –¥–ª—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"</i> –∏ —Å–º–µ–Ω–∏—Ç—å —Ñ–ª–∞–≥ –Ω–∞ <i>"–í–∏–¥–Ω–∞"</i>\n\n'
    msg_complete = "‚úÖ –ì–æ—Ç–æ–≤–æ"

    @staticmethod
    def _msg_confirm_total_wipe(user_requests, lack_of_requests):
        msg = \
            f"{str(user_requests)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å(—è) " + \
            f"–∑–∞–ø—Ä–æ—Å–∏–ª(–∏) –≥–ª–æ–±–∞–ª—å–Ω—ã–π –≤–∞–π–ø —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–∞–Ω–Ω–æ–º –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ –≤ —Ç–µ—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å—É—Ç–æ–∫.\n" + \
            f"\n–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –µ—â—ë {str(lack_of_requests)} " + \
            f"–∑–∞–ø—Ä–æ—Å(–∞) –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –æ—á–∏—Å—Ç–∫–∏..."
        return msg

    @classmethod
    def _msg_confirm_personal_wipe(cls, user_name, necessary_requests):
        msg = \
            f"{user_name}, –í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–µ–∫—É—â–µ–º –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ.\n\n" + \
            f"–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –æ—á–∏—Å—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É {cls.cmd_personal_wipe} " \
            f"–µ—â—ë {str(necessary_requests)} —Ä–∞–∑(–∞) –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
        return msg


class GroupWipeHandler(GroupWipeHandlerMessages):
    """
    –î–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º –º–æ–¥—É–ª–µ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ TelegramBot.
    –ö–ª–∞—Å—Å —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–æ–≥–∏–∫—É –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö Telegram (—É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π).
    –ù–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç –∫–ª–∞—Å—Å–∞ <GroupWipeHandlerMessages>, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç.
    –õ–æ–≥–∏–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö
    –∫–æ–º–∞–Ω–¥ (GroupWipeHandlerMessages.cmd_total_wipe, GroupWipeHandlerMessages.cmd_personal_wipe –∏ —Ç.–¥.).
    –ì–ª–∞–≤–Ω—ã–π –º–µ—Ç–æ–¥ async def message_handler –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ (—á–µ—Ä–µ–∑ —Ñ–∏–ª—å—Ç—Ä), –∏
    –≤ —Å–ª—É—á–∞–µ –Ω–∞–ª–∏—á–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ–¥–Ω–æ–π –∏–∑ –∫–æ–º–∞–Ω–¥ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫.
    """

    # –í —ç—Ç–æ–º –∞—Ç—Ä–∏–±—É—Ç–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –æ–±—ä–µ–∫—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–∞—Ö
    total_wipe_requests = {}  # {chat_id: {user_id: date_time, user_id: date_time, ..}, chat_id: {...}, ...}

    # –í —ç—Ç–æ–º –∞—Ç—Ä–∏–±—É—Ç–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –æ–±—ä–µ–∫—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π (–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ) –≤ —á–∞—Ç–∞—Ö
    personal_wipe_requests = {}  # {chat_id: {user_id: [date_time, date_time], user_id: [...], ...}, chat_id: {...} ...}

    @classmethod
    def register(cls, client):

        # # –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É
        @client.on(events.ChatAction())
        async def chat_action_handler(event):
            if event.user_added and event.is_channel:
                await event.respond(cls.msg_about_bot + cls.msg_help, parse_mode='html')

        @client.on(events.NewMessage(func=lambda e: e.is_group))
        async def _message_handler(event):
            event_text_split: list = event.text.split()
            if not event.text:  # –ï—Å–ª–∏ –≤—Ö–æ–¥—è—â–∞—è –º–µ—Å—Å–∞–≥–∞ –ø—É—Å—Ç–∞—è
                return
            if cls.cmd_total_wipe in event_text_split:
                # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤ —É –±–æ—Ç–∞ –≤ —Ç–µ–∫—É—â–µ–º –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ
                if not await cls._is_bot_admin(event):
                    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                    await event.respond(cls.msg_permission_denied)
                    return
                # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è
                confirm: bool = await cls._confirm_total_wipe(event)
                if confirm:
                    # –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –í–°–ï–• –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤–Ω—É—Ç—Ä–∏ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞
                    await cls._total_wipe_messages(event)
                    return
                else:
                    return

            elif cls.cmd_personal_wipe in event_text_split:
                # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤ —É –±–æ—Ç–∞ –≤ —Ç–µ–∫—É—â–µ–º –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ
                if not await cls._is_bot_admin(event):
                    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                    await event.respond(cls.msg_permission_denied)
                    return
                # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è
                confirm: bool = await cls._confirm_personal_wipe(event)
                if confirm:
                    # –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –û–ü–†–ï–î–ï–õ–Å–ù–ù–û–ì–û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–Ω—É—Ç—Ä–∏ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞
                    await cls._personal_wipe_messages(event)
                    return
                else:
                    return

            elif cls.cmd_help in event_text_split:
                await event.respond(cls.msg_help, parse_mode='html')
                return

            else:
                return


    @classmethod
    async def _is_bot_admin(cls, event) -> bool:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –±–æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≥—Ä—É–ø–ø—ã —Å –ø—Ä–∞–≤–∞–º–∏ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
        """
        try:
            # Getting information about yourself <https://docs.telethon.dev/en/stable/basic/quick-start.html>
            me = await event.client.get_me()

            # Getting information about chat
            chat = await event.get_chat()

            # –î–ª—è —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø/–∫–∞–Ω–∞–ª–æ–≤
            if hasattr(chat, 'admin_rights'):
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞
                if chat.admin_rights and chat.admin_rights.delete_messages:
                    return True
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∞–≤–∞—Ö
            try:
                permissions = await event.client.get_permissions(chat.id, me.id)

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                if isinstance(permissions.participant, (ChannelParticipantAdmin, ChannelParticipantCreator)):
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –ø—Ä–∞–≤–æ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
                    if isinstance(permissions.participant, ChannelParticipantCreator):
                        return True  # –°–æ–∑–¥–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –≤—Å–µ –ø—Ä–∞–≤–∞

                    if isinstance(permissions.participant, ChannelParticipantAdmin):
                        return permissions.participant.admin_rights.delete_messages
            except ChatAdminRequiredError:
                pass

            return False

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
            return False

    @classmethod
    async def _confirm_total_wipe(cls, event) -> bool:

        datetime_now = datetime.datetime.now()
        sender = await event.get_sender()
        chat_id = event.chat_id
        user_id = sender.id

        if cls.total_wipe_requests.get(chat_id, None):
            # –ï—Å–ª–∏ –∫–ª—é—á —Å chat_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤  cls.total_wipe_requests -> –æ–±–æ–π—Ç–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            for key, value in cls.total_wipe_requests[chat_id].items():
                # key - user_id, value - datetime
                time_difference = abs(datetime_now - value)
                # –ï—Å–ª–∏ –¥–µ–ª—å—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ —Ö–æ—Ç—è –±—É —É –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç—ã –±–æ–ª–µ–µ —Å—É—Ç–æ–∫ - –æ—á–∏—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å
                if not time_difference < datetime.timedelta(days=1):
                    cls.total_wipe_requests[chat_id].clear()
                    break

            cls.total_wipe_requests[chat_id][user_id] = datetime_now
            if len(cls.total_wipe_requests[chat_id].keys()) >= config.total_wipe_confirms:
                # –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ –≤–∞–π–ø –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞
                # –æ—á–∏—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ True (—Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∑–∞–ø—É—Å–∫ –≤–∞–π–ø–∞)
                cls.total_wipe_requests[chat_id].clear()
                await event.respond(cls.msg_run_global_wipe)
                return True
            else:
                await event.respond(cls._msg_confirm_total_wipe(
                    len((cls.total_wipe_requests[chat_id].keys())),
                    config.total_wipe_confirms - len(cls.total_wipe_requests[chat_id].keys()))
                )
                return False
        else:
            cls.total_wipe_requests[chat_id] = {}
            cls.total_wipe_requests[chat_id][user_id] = datetime_now

            await event.respond(cls._msg_confirm_total_wipe(
                len((cls.total_wipe_requests[chat_id].keys())),
                config.total_wipe_confirms - len(cls.total_wipe_requests[chat_id].keys()))
            )
            return False

    @classmethod
    async def _total_wipe_messages(cls, event):
        """–ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞"""

        try:
            count = 0
            async for message in event.client.iter_messages(event.chat_id):
                try:
                    await message.delete()
                    count += 1
                    if count % 10 == 0:  # –û—Ç—á–µ—Ç –∫–∞–∂–¥—ã–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
                        print(f"–£–¥–∞–ª–µ–Ω–æ {count} —Å–æ–æ–±—â–µ–Ω–∏–π")
                    await asyncio.sleep(0.5)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                    continue

            await event.reply(
                cls.msg_complete,
                file=os.path.join('files', 'pepe.png')
            )
        except Exception as e:
            print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            await event.respond("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —á–∞—Ç–∞")

    @classmethod
    async def _confirm_personal_wipe(cls, event) -> bool:

        datetime_now = datetime.datetime.now()
        sender = await event.get_sender()
        chat_id = event.chat_id
        user_id = sender.id
        first_name = sender.first_name  # –ò–º—è (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ)
        last_name = getattr(sender, 'last_name', None)  # –§–∞–º–∏–ª–∏—è (–º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å)
        # –ü–æ–ª–Ω–æ–µ –∏–º—è (–∫–æ–º–±–∏–Ω–∞—Ü–∏—è –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏)
        full_name = f"{first_name} {last_name}" if last_name else first_name

        if cls.personal_wipe_requests.get(chat_id, None):
            # –ï—Å–ª–∏ –∫–ª—é—á —Å chat_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤  cls.personal_wipe_requests -> –æ–±–æ–π—Ç–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ: list[datetime, ...]
            if cls.personal_wipe_requests[chat_id].get(user_id, None):
                if len(cls.personal_wipe_requests[chat_id][user_id]) > 0:
                    for datetime_item in cls.personal_wipe_requests[chat_id][user_id]:
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É_–≤—Ä–µ–º—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ —Å—Ç–∞—Ä—à–µ —Å—É—Ç–æ–∫)
                        time_difference = abs(datetime_now - datetime_item)
                        if not time_difference < datetime.timedelta(days=1):
                            cls.personal_wipe_requests[chat_id][user_id].clear()
                            break

                    cls.personal_wipe_requests[chat_id][user_id].append(datetime_now)
                    if len(cls.personal_wipe_requests[chat_id][user_id]) >= config.personal_wipe_confirms:
                        cls.personal_wipe_requests[chat_id][user_id].clear()
                        await event.respond(f'{cls.msg_run_personal_wipe}\n{full_name}')
                        return True
                    else:
                        necessary_requests = \
                            config.personal_wipe_confirms - len(cls.personal_wipe_requests[chat_id][user_id])
                        await event.respond(cls._msg_confirm_personal_wipe(full_name, necessary_requests))
                        return False
                else:
                    cls.personal_wipe_requests[chat_id][user_id].append(datetime_now)
                    necessary_requests = \
                        config.personal_wipe_confirms - len(cls.personal_wipe_requests[chat_id][user_id])
                    await event.respond(cls._msg_confirm_personal_wipe(full_name, necessary_requests))
                    return False
            else:
                cls.personal_wipe_requests[chat_id][user_id] = []
                cls.personal_wipe_requests[chat_id][user_id].append(datetime_now)
                necessary_requests = \
                    config.personal_wipe_confirms - len(cls.personal_wipe_requests[chat_id][user_id])
                await event.respond(cls._msg_confirm_personal_wipe(full_name, necessary_requests))
                return False
        else:
            cls.personal_wipe_requests[chat_id] = {}
            cls.personal_wipe_requests[chat_id][user_id] = []
            cls.personal_wipe_requests[chat_id][user_id].append(datetime_now)
            necessary_requests = \
                config.personal_wipe_confirms - len(cls.personal_wipe_requests[chat_id][user_id])
            await event.respond(cls._msg_confirm_personal_wipe(full_name, necessary_requests))
            return False

    @classmethod
    async def _personal_wipe_messages(cls, event):
        """
        –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ
        """
        sender = await event.get_sender()
        user_id = sender.id
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            async for message in event.client.iter_messages(
                    event.chat_id,
                    from_user=user_id
            ):
                try:
                    await message.delete()
                    await asyncio.sleep(0.5)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è {message.id}: {e}")
                    continue

            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞
            first_name = sender.first_name  # –ò–º—è (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ)
            last_name = getattr(sender, 'last_name', None)  # –§–∞–º–∏–ª–∏—è (–º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å)
            # –ü–æ–ª–Ω–æ–µ –∏–º—è (–∫–æ–º–±–∏–Ω–∞—Ü–∏—è –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏)
            full_name = f"{first_name} {last_name}" if last_name else first_name

            await event.reply(
                f"{cls.msg_complete}, {full_name}",
                file=os.path.join('files', 'pepe.png')
            )

        except Exception as e:
            print(f"An error occurred while deleting user messages {user_id}: {e}")
            await event.respond(f"An error occurred while deleting user messages {user_id}")
